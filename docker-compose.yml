version: '3.8'

services:
  # Core API Gateway
  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://originfd:password@postgres:5432/originfd
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=dev-secret-change-in-production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/api:/app/services/api
      - ./packages/py:/app/packages/py
      - ./domains:/app/domains

  # AI Orchestrator
  orchestrator:
    build:
      context: .
      dockerfile: services/orchestrator/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://originfd:password@postgres:5432/originfd
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/orchestrator:/app/services/orchestrator
      - ./packages/py:/app/packages/py

  # Background Workers
  workers:
    build:
      context: .
      dockerfile: services/workers/Dockerfile
    environment:
      - DATABASE_URL=postgresql://originfd:password@postgres:5432/originfd
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/workers:/app/services/workers
      - ./packages/py:/app/packages/py
      - ./domains:/app/domains

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Uncomment to proxy API requests to a backend service
      # - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-change-in-production
    depends_on:
      - api
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages/ts:/app/packages/ts

  # PostgreSQL Database
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=originfd
      - POSTGRES_USER=originfd
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Optional: PGAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@originfd.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data: