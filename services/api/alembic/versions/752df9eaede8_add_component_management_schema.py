"""Add component management schema

Revision ID: 752df9eaede8
Revises:
Create Date: 2025-09-07 17:06:10.746177

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy import String, Text
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "752df9eaede8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "documents",
        sa.Column("project_name", sa.String(length=255), nullable=False),
        sa.Column("portfolio_id", sa.UUID(), nullable=True),
        sa.Column("domain", sa.String(length=50), nullable=False),
        sa.Column("scale", sa.String(length=50), nullable=False),
        sa.Column("current_version", sa.Integer(), nullable=False),
        sa.Column("content_hash", sa.String(length=71), nullable=False),
        sa.Column(
            "document_data", postgresql.JSONB(astext_type=Text()), nullable=False
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_locked", sa.Boolean(), nullable=False),
        sa.Column("locked_by", sa.UUID(), nullable=True),
        sa.Column("locked_at", sa.NullType(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        postgresql_partition_by="RANGE (created_at)",
    )
    op.create_index(
        "ix_documents_domain_scale", "documents", ["domain", "scale"], unique=False
    )
    op.create_index(
        op.f("ix_documents_portfolio_id"), "documents", ["portfolio_id"], unique=False
    )
    op.create_index(
        op.f("ix_documents_tenant_id"), "documents", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_documents_tenant_project",
        "documents",
        ["tenant_id", "project_name"],
        unique=False,
    )
    op.create_table(
        "tenants",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("slug", sa.String(length=100), nullable=False),
        sa.Column("domain", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("settings", sa.Text(), nullable=True),
        sa.Column("plan", sa.String(length=50), nullable=True),
        sa.Column("max_users", sa.String(length=10), nullable=True),
        sa.Column("max_projects", sa.String(length=10), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("domain"),
    )
    op.create_index(op.f("ix_tenants_name"), "tenants", ["name"], unique=False)
    op.create_index(op.f("ix_tenants_slug"), "tenants", ["slug"], unique=True)
    op.create_table(
        "components",
        sa.Column("component_id", sa.String(length=255), nullable=False),
        sa.Column("brand", sa.String(length=64), nullable=False),
        sa.Column("part_number", sa.String(length=64), nullable=False),
        sa.Column("rating_w", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column(
            "classification", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column("category", sa.String(length=50), nullable=True),
        sa.Column("subcategory", sa.String(length=50), nullable=True),
        sa.Column("domain", sa.String(length=20), nullable=True),
        sa.Column("scale", sa.String(length=20), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_components_brand"), "components", ["brand"], unique=False)
    op.create_index(
        op.f("ix_components_category"), "components", ["category"], unique=False
    )
    op.create_index(
        op.f("ix_components_component_id"), "components", ["component_id"], unique=True
    )
    op.create_index(
        op.f("ix_components_domain"), "components", ["domain"], unique=False
    )
    op.create_index(op.f("ix_components_name"), "components", ["name"], unique=True)
    op.create_index(
        op.f("ix_components_part_number"), "components", ["part_number"], unique=False
    )
    op.create_index(op.f("ix_components_scale"), "components", ["scale"], unique=False)
    op.create_index(
        op.f("ix_components_status"), "components", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_components_subcategory"), "components", ["subcategory"], unique=False
    )
    op.create_index(
        op.f("ix_components_tenant_id"), "components", ["tenant_id"], unique=False
    )
    op.create_table(
        "document_access",
        sa.Column("document_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("role", sa.String(length=100), nullable=True),
        sa.Column("permissions", postgresql.JSONB(astext_type=Text()), nullable=False),
        sa.Column("expires_at", sa.NullType(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("granted_by", sa.UUID(), nullable=False),
        sa.Column("grant_reason", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_doc_access_document_user",
        "document_access",
        ["document_id", "user_id"],
        unique=False,
    )
    op.create_index(
        "ix_doc_access_role_permissions",
        "document_access",
        ["role", "permissions"],
        unique=False,
    )
    op.create_index(
        op.f("ix_document_access_tenant_id"),
        "document_access",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "document_versions",
        sa.Column("document_id", sa.UUID(), nullable=False),
        sa.Column("version_number", sa.Integer(), nullable=False),
        sa.Column("content_hash", sa.String(length=71), nullable=False),
        sa.Column("previous_hash", sa.String(length=71), nullable=True),
        sa.Column("change_summary", sa.Text(), nullable=True),
        sa.Column(
            "patch_operations", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column("evidence_uris", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("actor_type", sa.String(length=50), nullable=False),
        sa.Column(
            "document_data", postgresql.JSONB(astext_type=Text()), nullable=False
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_doc_versions_document_version",
        "document_versions",
        ["document_id", "version_number"],
        unique=False,
    )
    op.create_index(
        op.f("ix_document_versions_tenant_id"),
        "document_versions",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "projects",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("owner_id", sa.UUID(), nullable=False),
        sa.Column("organization", sa.String(length=255), nullable=True),
        sa.Column(
            "domain",
            sa.Enum("PV", "BESS", "HYBRID", "GRID", "MICROGRID", name="projectdomain"),
            nullable=False,
        ),
        sa.Column(
            "scale",
            sa.Enum(
                "RESIDENTIAL",
                "COMMERCIAL",
                "INDUSTRIAL",
                "UTILITY",
                "HYPERSCALE",
                name="projectscale",
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "DRAFT",
                "ACTIVE",
                "UNDER_REVIEW",
                "APPROVED",
                "IN_CONSTRUCTION",
                "OPERATIONAL",
                "DECOMMISSIONED",
                "CANCELLED",
                name="projectstatus",
            ),
            nullable=True,
        ),
        sa.Column("location_name", sa.String(length=255), nullable=True),
        sa.Column("latitude", sa.String(length=20), nullable=True),
        sa.Column("longitude", sa.String(length=20), nullable=True),
        sa.Column("country_code", sa.String(length=3), nullable=True),
        sa.Column("timezone", sa.String(length=50), nullable=True),
        sa.Column("total_capacity_kw", sa.String(length=20), nullable=True),
        sa.Column("voltage_level", sa.String(length=50), nullable=True),
        sa.Column("grid_connection_type", sa.String(length=100), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("project_metadata", sa.JSON(), nullable=True),
        sa.Column("settings", sa.JSON(), nullable=True),
        sa.Column("start_date", sa.DateTime(), nullable=True),
        sa.Column("expected_completion", sa.DateTime(), nullable=True),
        sa.Column("actual_completion", sa.DateTime(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.Column("is_template", sa.Boolean(), nullable=True),
        sa.Column("is_archived", sa.Boolean(), nullable=True),
        sa.Column("version", sa.String(length=20), nullable=True),
        sa.Column("parent_project_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_domain"), "projects", ["domain"], unique=False)
    op.create_index(op.f("ix_projects_name"), "projects", ["name"], unique=False)
    op.create_index(
        op.f("ix_projects_owner_id"), "projects", ["owner_id"], unique=False
    )
    op.create_index(op.f("ix_projects_scale"), "projects", ["scale"], unique=False)
    op.create_index(op.f("ix_projects_status"), "projects", ["status"], unique=False)
    op.create_table(
        "rfqs",
        sa.Column("rfq_id", sa.String(length=64), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("round", sa.Integer(), nullable=False),
        sa.Column("deadline", sa.DateTime(), nullable=True),
        sa.Column("issued_at", sa.DateTime(), nullable=True),
        sa.Column("awarded_at", sa.DateTime(), nullable=True),
        sa.Column("lines", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("bids", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("evaluation", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("awarded_by", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["awarded_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_rfqs_rfq_id"), "rfqs", ["rfq_id"], unique=True)
    op.create_index(op.f("ix_rfqs_status"), "rfqs", ["status"], unique=False)
    op.create_index(op.f("ix_rfqs_tenant_id"), "rfqs", ["tenant_id"], unique=False)
    op.create_table(
        "suppliers",
        sa.Column("supplier_id", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("gln", sa.String(length=13), nullable=True),
        sa.Column("contact", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("capabilities", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column(
            "certifications", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        sa.Column("approved_by", sa.UUID(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_suppliers_gln"), "suppliers", ["gln"], unique=False)
    op.create_index(op.f("ix_suppliers_name"), "suppliers", ["name"], unique=False)
    op.create_index(op.f("ix_suppliers_status"), "suppliers", ["status"], unique=False)
    op.create_index(
        op.f("ix_suppliers_supplier_id"), "suppliers", ["supplier_id"], unique=True
    )
    op.create_index(
        op.f("ix_suppliers_tenant_id"), "suppliers", ["tenant_id"], unique=False
    )
    op.create_table(
        "component_management",
        sa.Column("component_id", sa.UUID(), nullable=False),
        sa.Column("version", sa.String(length=10), nullable=False),
        sa.Column(
            "source_documents", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column(
            "tracking_policy", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column("approvals", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column(
            "supplier_chain", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column(
            "order_management", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column("inventory", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("warranty", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("returns", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("traceability", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("compliance", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("ai_logs", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("audit", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("analytics", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("media", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["components.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("component_id"),
    )
    op.create_table(
        "inventory_records",
        sa.Column("component_id", sa.UUID(), nullable=False),
        sa.Column("location", postgresql.JSONB(astext_type=Text()), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("uom", sa.String(length=10), nullable=False),
        sa.Column("on_hand_qty", sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column("reserved_qty", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("lots", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("serials", postgresql.ARRAY(Text()), nullable=True),
        sa.Column("last_movement", sa.DateTime(), nullable=True),
        sa.Column("last_count", sa.DateTime(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["components.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_inventory_records_status"),
        "inventory_records",
        ["status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_inventory_records_tenant_id"),
        "inventory_records",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "media_assets",
        sa.Column("asset_id", sa.String(length=64), nullable=False),
        sa.Column("component_id", sa.UUID(), nullable=True),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("scope", sa.String(length=30), nullable=False),
        sa.Column("link", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("uri", sa.Text(), nullable=False),
        sa.Column("hash", sa.String(length=71), nullable=False),
        sa.Column("mime", sa.String(length=100), nullable=True),
        sa.Column("width_px", sa.Integer(), nullable=True),
        sa.Column("height_px", sa.Integer(), nullable=True),
        sa.Column("vector", sa.Boolean(), nullable=True),
        sa.Column("exif", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("captured_at", sa.DateTime(), nullable=True),
        sa.Column("captured_by", sa.String(length=120), nullable=True),
        sa.Column("gps", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("alt_text", sa.String(length=300), nullable=True),
        sa.Column("language", sa.String(length=8), nullable=True),
        sa.Column("license", sa.String(length=64), nullable=True),
        sa.Column("approved_for_external", sa.Boolean(), nullable=True),
        sa.Column("privacy", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("overlays", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("symbol_ref", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("tags", postgresql.ARRAY(String(length=32)), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["components.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_media_assets_asset_id"), "media_assets", ["asset_id"], unique=True
    )
    op.create_index(
        op.f("ix_media_assets_hash"), "media_assets", ["hash"], unique=False
    )
    op.create_index(
        op.f("ix_media_assets_scope"), "media_assets", ["scope"], unique=False
    )
    op.create_index(
        op.f("ix_media_assets_tenant_id"), "media_assets", ["tenant_id"], unique=False
    )
    op.create_index(
        op.f("ix_media_assets_type"), "media_assets", ["type"], unique=False
    )
    op.create_table(
        "project_members",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role", sa.String(length=50), nullable=False),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("invited_at", sa.DateTime(), nullable=True),
        sa.Column("joined_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_project_members_project_id"),
        "project_members",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_project_members_user_id"), "project_members", ["user_id"], unique=False
    )
    op.create_table(
        "purchase_orders",
        sa.Column("po_id", sa.String(length=64), nullable=False),
        sa.Column("supplier_id", sa.UUID(), nullable=False),
        sa.Column("rfq_id", sa.UUID(), nullable=True),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("total_amount", sa.DECIMAL(precision=12, scale=2), nullable=True),
        sa.Column("lines", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("delivery", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("terms", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("waybill", sa.String(length=64), nullable=True),
        sa.Column("status", sa.String(length=30), nullable=False),
        sa.Column("issued_at", sa.DateTime(), nullable=False),
        sa.Column("acknowledged_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["rfq_id"],
            ["rfqs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["supplier_id"],
            ["suppliers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_purchase_orders_po_id"), "purchase_orders", ["po_id"], unique=True
    )
    op.create_index(
        op.f("ix_purchase_orders_status"), "purchase_orders", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_purchase_orders_tenant_id"),
        "purchase_orders",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_purchase_orders_waybill"), "purchase_orders", ["waybill"], unique=False
    )
    op.create_table(
        "shipments",
        sa.Column("shipment_id", sa.String(length=64), nullable=False),
        sa.Column("po_id", sa.UUID(), nullable=True),
        sa.Column("waybill", sa.String(length=64), nullable=True),
        sa.Column("consignment_ref", sa.String(length=64), nullable=True),
        sa.Column("carrier", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("origin", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("destination", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("eta", sa.DateTime(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column(
            "handling_units", postgresql.JSONB(astext_type=Text()), nullable=True
        ),
        sa.Column("events", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("last_known", postgresql.JSONB(astext_type=Text()), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["po_id"],
            ["purchase_orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_shipments_shipment_id"), "shipments", ["shipment_id"], unique=True
    )
    op.create_index(op.f("ix_shipments_status"), "shipments", ["status"], unique=False)
    op.create_index(
        op.f("ix_shipments_tenant_id"), "shipments", ["tenant_id"], unique=False
    )
    op.create_index(
        op.f("ix_shipments_waybill"), "shipments", ["waybill"], unique=False
    )
    op.alter_column(
        "user_sessions",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "user_sessions",
        "user_id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "id",
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "user_sessions",
        "user_id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "user_sessions",
        "id",
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.drop_index(op.f("ix_shipments_waybill"), table_name="shipments")
    op.drop_index(op.f("ix_shipments_tenant_id"), table_name="shipments")
    op.drop_index(op.f("ix_shipments_status"), table_name="shipments")
    op.drop_index(op.f("ix_shipments_shipment_id"), table_name="shipments")
    op.drop_table("shipments")
    op.drop_index(op.f("ix_purchase_orders_waybill"), table_name="purchase_orders")
    op.drop_index(op.f("ix_purchase_orders_tenant_id"), table_name="purchase_orders")
    op.drop_index(op.f("ix_purchase_orders_status"), table_name="purchase_orders")
    op.drop_index(op.f("ix_purchase_orders_po_id"), table_name="purchase_orders")
    op.drop_table("purchase_orders")
    op.drop_index(op.f("ix_project_members_user_id"), table_name="project_members")
    op.drop_index(op.f("ix_project_members_project_id"), table_name="project_members")
    op.drop_table("project_members")
    op.drop_index(op.f("ix_media_assets_type"), table_name="media_assets")
    op.drop_index(op.f("ix_media_assets_tenant_id"), table_name="media_assets")
    op.drop_index(op.f("ix_media_assets_scope"), table_name="media_assets")
    op.drop_index(op.f("ix_media_assets_hash"), table_name="media_assets")
    op.drop_index(op.f("ix_media_assets_asset_id"), table_name="media_assets")
    op.drop_table("media_assets")
    op.drop_index(
        op.f("ix_inventory_records_tenant_id"), table_name="inventory_records"
    )
    op.drop_index(op.f("ix_inventory_records_status"), table_name="inventory_records")
    op.drop_table("inventory_records")
    op.drop_table("component_management")
    op.drop_index(op.f("ix_suppliers_tenant_id"), table_name="suppliers")
    op.drop_index(op.f("ix_suppliers_supplier_id"), table_name="suppliers")
    op.drop_index(op.f("ix_suppliers_status"), table_name="suppliers")
    op.drop_index(op.f("ix_suppliers_name"), table_name="suppliers")
    op.drop_index(op.f("ix_suppliers_gln"), table_name="suppliers")
    op.drop_table("suppliers")
    op.drop_index(op.f("ix_rfqs_tenant_id"), table_name="rfqs")
    op.drop_index(op.f("ix_rfqs_status"), table_name="rfqs")
    op.drop_index(op.f("ix_rfqs_rfq_id"), table_name="rfqs")
    op.drop_table("rfqs")
    op.drop_index(op.f("ix_projects_status"), table_name="projects")
    op.drop_index(op.f("ix_projects_scale"), table_name="projects")
    op.drop_index(op.f("ix_projects_owner_id"), table_name="projects")
    op.drop_index(op.f("ix_projects_name"), table_name="projects")
    op.drop_index(op.f("ix_projects_domain"), table_name="projects")
    op.drop_table("projects")
    op.drop_index(
        op.f("ix_document_versions_tenant_id"), table_name="document_versions"
    )
    op.drop_index("ix_doc_versions_document_version", table_name="document_versions")
    op.drop_table("document_versions")
    op.drop_index(op.f("ix_document_access_tenant_id"), table_name="document_access")
    op.drop_index("ix_doc_access_role_permissions", table_name="document_access")
    op.drop_index("ix_doc_access_document_user", table_name="document_access")
    op.drop_table("document_access")
    op.drop_index(op.f("ix_components_tenant_id"), table_name="components")
    op.drop_index(op.f("ix_components_subcategory"), table_name="components")
    op.drop_index(op.f("ix_components_status"), table_name="components")
    op.drop_index(op.f("ix_components_scale"), table_name="components")
    op.drop_index(op.f("ix_components_part_number"), table_name="components")
    op.drop_index(op.f("ix_components_name"), table_name="components")
    op.drop_index(op.f("ix_components_domain"), table_name="components")
    op.drop_index(op.f("ix_components_component_id"), table_name="components")
    op.drop_index(op.f("ix_components_category"), table_name="components")
    op.drop_index(op.f("ix_components_brand"), table_name="components")
    op.drop_table("components")
    op.drop_index(op.f("ix_tenants_slug"), table_name="tenants")
    op.drop_index(op.f("ix_tenants_name"), table_name="tenants")
    op.drop_table("tenants")
    op.drop_index("ix_documents_tenant_project", table_name="documents")
    op.drop_index(op.f("ix_documents_tenant_id"), table_name="documents")
    op.drop_index(op.f("ix_documents_portfolio_id"), table_name="documents")
    op.drop_index("ix_documents_domain_scale", table_name="documents")
    op.drop_table("documents")
    # ### end Alembic commands ###
